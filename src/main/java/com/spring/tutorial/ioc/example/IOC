
https://www.geeksforgeeks.org/spring-understanding-inversion-of-control-with-example/?ref=next_article

Spring â€“ Understanding Inversion of Control with Example
Spring IoC (Inversion of Control) Container is the core of Spring Framework. It creates the objects, configures and
assembles their dependencies, manages their entire life cycle. The Container uses Dependency Injection(DI) to
manage the components that make up the application. It gets the information about the objects from a configuration
file(XML) or Java Code or Java Annotations and Java POJO class. These objects are called Beans. Since the
Controlling of Java objects and their lifecycle is not done by the developers, hence the name Inversion Of Control.
There are 2 types of IoC containers:

BeanFactory
ApplicationContext
That means if you want to use an IoC container in spring whether we need to use a BeanFactory or ApplicationContext.
The BeanFactory is the most basic version of IoC containers, and the ApplicationContext extends the features of
BeanFactory. The followings are some of the main features of Spring IoC,

Creating Object for us,
Managing our objects,
Helping our application to be configurable,
Managing dependencies